{"version":3,"sources":["components/drawer/SideDrawer.js"],"names":["SideDrawer","dispatch","useDispatch","useSelector","state","drawer","cart","imageStyle","maxWidth","maxHeight","title","length","placement","closable","onClose","type","payload","visible","width","style","overflow","map","p","pathImage","images","process","className","display","justifyContent","alt","src","fontSize","name","count","_id","to","onClick"],"mappings":"6JAuEeA,UAjEI,WACjB,IAAMC,EAAWC,cADM,EAEEC,aAAY,SAACC,GAAD,sBAAiBA,MAA9CC,EAFe,EAEfA,OAAQC,EAFO,EAEPA,KAEVC,EAAa,CACjBC,SAAU,QACVC,UAAW,QAGb,OACE,cAAC,IAAD,CACEC,MAAK,kGAAuBJ,EAAKK,OAA5B,kBACLC,UAAU,QACVC,UAAU,EACVC,QAAS,WACPb,EAAS,CACPc,KAAM,cACNC,SAAS,KAGbC,QAASZ,EACTa,MAAM,MAXR,SAcI,sBAAKC,MAAO,CAACC,SAAU,QAAvB,UACDd,EAAKe,KAAI,SAACC,GACT,IAAIC,EAAY,GAGhB,OAFyBA,EAArBD,EAAEE,OAAOb,OAAS,EAAY,UAAMc,kBAAN,YAA+CH,EAAEE,OAAO,IAC5E,UAAMC,kBAAN,gBAEZ,qBAAiBC,UAAU,UAA3B,SACGJ,EAAEE,QACD,gCACE,8BACE,qBAAKL,MAAO,CAAEQ,QAAS,OAAQC,eAAgB,UAA/C,SACE,qBAAKC,IAAI,UAAUC,IAAKP,EAAWJ,MAAOZ,QAG9C,8BACE,qBAAKY,MAAO,CAAEQ,QAAS,OAAQC,eAAgB,SAAUG,SAAS,UAAlE,SACI,gCACCT,EAAEU,KADH,KACU,uBAAMN,UAAU,mBAAhB,eAAsCJ,EAAEW,oBAXpDX,EAAEY,QAqBhB,uBACA,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,wBACET,UAAU,mDACVU,QAAS,kBAAMnC,EAAS,CAAEc,KAAM,cAAeC,SAAS,KAF1D","file":"static/js/52.d56ad380.chunk.js","sourcesContent":["import React from \"react\";\nimport { Drawer, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n\nconst SideDrawer = () => {\n  const dispatch = useDispatch();\n  const { drawer, cart } = useSelector((state) => ({ ...state }));\n\n  const imageStyle = {\n    maxWidth: \"100px\",\n    maxHeight: \"80px\",\n  };\n\n  return (\n    <Drawer\n      title={`Корзина/ товаров: ${cart.length} шт.`}\n      placement=\"right\"\n      closable={false}\n      onClose={() => {\n        dispatch({\n          type: \"SET_VISIBLE\",\n          payload: false,\n        });\n      }}\n      visible={drawer}\n      width=\"300\"\n      \n    >\n        <div style={{overflow: \"auto\"}}>\n      {cart.map((p) => {\n        let pathImage = \"\";\n        if (p.images.length > 0) pathImage = `${process.env.REACT_APP_IMAGES_PRODUCTS}/${p.images[0]}`;\n        else pathImage = `${process.env.REACT_APP_IMAGES_PRODUCTS}/default.png`;\n        return (\n          <div key={p._id} className=\"m-0 p-0\" >\n            {p.images && (\n              <div>\n                <div>\n                  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <img alt=\"picture\" src={pathImage} style={imageStyle} />\n                  </div>\n                </div>\n                <div>\n                  <div style={{ display: \"flex\", justifyContent: \"center\", fontSize:\"0.8rem\" }}>\n                      <div>\n                      {p.name}  <span className=\"text-danger ml-1\">x {p.count}</span>\n                      </div>\n                    \n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      <hr/>\n      <Link to=\"/user/cart\">\n        <button\n          className=\"text-center btn btn-primary btn-raised btn-block\"\n          onClick={() => dispatch({ type: \"SET_VISIBLE\", payload: false })}\n        >\n          Перейти в корзину\n        </button>\n      </Link>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default SideDrawer;\n"],"sourceRoot":""}